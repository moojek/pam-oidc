name: Build and publish
on:
  push:
    tags:
      - '*'
    branches:
      - '*'
  workflow_dispatch:
jobs:
  build-libjwt3:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: benmcollins/libjwt
          ref: v3.2.2
      - name: Cache libjwt build
        uses: actions/cache@v4
        with:
          path: |
            build
            output
          key: libjwt3-${{ runner.os }}-${{ hashFiles('**/.github/workflows/build.yml') }}-${{ hashFiles('**/libjwt/**') }}
          restore-keys: |
            libjwt3-${{ runner.os }}-
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libjansson-dev cmake
      - run: |
          mkdir build output
      - name: Build libjwt
        working-directory: build
        run: |
          cmake ..
          make
      - name: Copy library files to output path
        run: |
          cp include/jwt.h output/
          cp build/jwt_export.h output/
          cp build/libjwt.so output/
      - name: Upload output files
        uses: actions/upload-artifact@v4
        with:
          name: libjwt-output
          path: output/
  build:
    runs-on: ubuntu-latest
    needs: build-libjwt3
    steps:
      - name: Download libjwt
        uses: actions/download-artifact@v4
        with:
          name: libjwt-output
      - run: |
          sudo cp jwt.h /usr/local/include/
          sudo cp jwt_export.h /usr/local/include/
          sudo cp libjwt.so /usr/local/lib/
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libcjson-dev libcurl4-openssl-dev libpam0g-dev
      - name: Build
        uses: wolfSSL/actions-build-autotools-project@v1
        with: 
          # repository: 
          configure: '--libdir=/usr/lib/x86_64-linux-gnu'
          check: false
          install: false
